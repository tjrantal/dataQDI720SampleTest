#if !defined(AFX_DATAQSDK_H__64D2CCDC_2F21_4EC5_8596_6B8A92BE45DE__INCLUDED_)
#define AFX_DATAQSDK_H__64D2CCDC_2F21_4EC5_8596_6B8A92BE45DE__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CDataqSdk wrapper class

class CDataqSdk : public CWnd
{
protected:
	DECLARE_DYNCREATE(CDataqSdk)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xf88080e5, 0x9b4b, 0x11d3, { 0xab, 0xff, 0x0, 0x40, 0x5, 0x5d, 0xe8, 0x9 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CString GetDeviceDriver();
	void SetDeviceDriver(LPCTSTR);
	CString GetDeviceID();
	void SetDeviceID(LPCTSTR);
	short GetADChannelCount();
	void SetADChannelCount(short);
	double GetSampleRate();
	void SetSampleRate(double);
	double GetMaxBurstRate();
	void SetMaxBurstRate(double);
	long GetEventPoint();
	void SetEventPoint(long);
	long GetBurstCounter();
	void SetBurstCounter(long);
	long GetTrigMode();
	void SetTrigMode(long);
	short GetTrigLevel();
	void SetTrigLevel(short);
	long GetTrigSlope();
	void SetTrigSlope(long);
	short GetTrigScnChnIdx();
	void SetTrigScnChnIdx(short);
	short GetTrigPreLength();
	void SetTrigPreLength(short);
	short GetTrigPostLength();
	void SetTrigPostLength(short);
	long GetTrigHysteresisIdx();
	void SetTrigHysteresisIdx(long);
	short GetDigitalOutput();
	void SetDigitalOutput(short);
	long GetAvailableData();
	void SetAvailableData(long);
	short GetDigitalInput();
	void SetDigitalInput(short);
	short GetInfoBoardID();
	void SetInfoBoardID(short);
	CString GetInfoSerial();
	void SetInfoSerial(LPCTSTR);
	BOOL GetInfoPGL();
	void SetInfoPGL(BOOL);
	long GetLastErrorCode();
	void SetLastErrorCode(long);
	short GetInfoRev();
	void SetInfoRev(short);
	long GetADCounter();
	void SetADCounter(long);

// Operations
public:
	VARIANT GetData();
	void ADChannelList(const VARIANT& Channel);
	void ADCounterList(const VARIANT& Counter);
	void ADDiffList(const VARIANT& Diff);
	void ADGainList(const VARIANT& Gain);
	void ADMethodList(const VARIANT& Method);
	short GetDataEx(short* Buffer, short Count);
	void DAOutput(short Data, short Port);
	void Start();
	void Stop();
	short GetDataFrameEx(short* Buffer, short Count);
	VARIANT GetDataFrame(short Count);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_DATAQSDK_H__64D2CCDC_2F21_4EC5_8596_6B8A92BE45DE__INCLUDED_)
